name: Publisher
on:
  workflow_dispatch:
  release:
    types: [published] 
jobs:
  crates:
    name: üì¶ Upload to crates.io üì¶
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - run: cargo publish --token ${CRATES_TOKEN} 
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
  chocolatey:
    name: üç´ Upload to chocolatey. Chocolate time! üç´üç´üç´
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Normalize release version #removes the v prefix
        run: |
          $currentTag = '${{ github.ref_name }}'
          echo ("VERSION=" + $currentTag.replace('v', '')) | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build on windows
        run: cargo build --release
      - name: Set up chocolatey workspace 
        run: |
          mkdir tools
          cp "target/release/horcrust.exe" tools/
          cp "LICENSE.txt" tools/
      - name: Generate nuspec template
        run: |
          echo '<?xml version="1.0"?>' > horcrust.nuspec
          echo '<package>' >> horcrust.nuspec
          echo '  <metadata>' >> horcrust.nuspec
          echo '    <id>horcrust</id>' >> horcrust.nuspec
          echo '    <version>${{ env.VERSION }}</version>' >> horcrust.nuspec
          echo '    <title>horcrust</title>' >> horcrust.nuspec
          echo '    <authors>ccline</authors>' >> horcrust.nuspec
          echo '    <projectUrl>https://github.com/codycline/horcrux-rs</projectUrl>' >> horcrust.nuspec
          echo '    <description>Horcrust is a command-line-tool which splits a file into encrypted shards for safekeeping. As long as the specified threshold is met, a user can resurrect their original file at any time - no password necessary.</description>' >> horcrust.nuspec
          echo '    <tags>encryption cli rust</tags>' >> horcrust.nuspec
          echo '  </metadata>' >> horcrust.nuspec
          echo '  <files>' >> horcrust.nuspec
          echo '    <file src="tools\**" target="tools" />' >> horcrust.nuspec
          echo '  </files>' >> horcrust.nuspec
          echo '</package>' >> horcrust.nuspec
      - name: Create VERIFICATION.txt
        run: |
          echo 'Generated by `CertUtil -hashfile horcrust.exe SHA256`: \r\n' > tools/VERIFICATION.txt
          echo $(CertUtil -hashfile tools\horcrust.exe SHA256) >> tools/VERIFICATION.txt
      - name: Create chocolatey package
        run: choco pack horcrust.nuspec
      - name: Publish on chocolatey
        run: choco push horcrust.${{ env.VERSION }}.nupkg -s https://push.chocolatey.org/ --api-key=${{ secrets.CHOCOLATEY_API_KEY }}

  brew:
    name: üç∫ Publish to homebrew üç∫
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build on macos
        run: cargo build --release
      
      - name: Compress artifact
        run: |
          cp target/release/horcrust .
          tar -czf horcrust-${{ github.ref_name }}-apple-darwin.tar.gz horcrust LICENSE.txt
      
      - id: shasum 
        run: echo sha=$(shasum -a 256 horcrust-${{ github.ref_name }}-apple-darwin.tar.gz | awk '{printf $1}') >> $GITHUB_OUTPUT
      
      - name: üç∫ Bump Brew
        
        run: |
          brew tap codycline/homebrew-tap
          brew bump-formula-pr -f --version=${{ github.ref_name }} --no-browse --no-audit \
          --sha256=${{ steps.shashum.outputs.sha }} \
          --url='https://github.com/codycline/horcrux-rs/releases/download/${{ github.ref_name }}/horcrust-${{ github.ref_name }}-apple-darwin.tar.gz' \
          tgotwig/homebrew-vidmerger/vidmerger
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.BREW_TOKEN }}