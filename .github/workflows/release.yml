name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  build_ubuntu:
    name: Build ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build on Ubuntu
        run: cargo build --release

      - name: Archive Ubuntu Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-artifact
          path: target/release/hx

  build_windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build on Windows
        run: cargo build --release

      - name: Archive Windows Artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-artifact
          path: target/release/hx

  build_mac:
    name: Build on macOS
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build on macOS
        run: cargo build --release

      - name: Archive macOS Artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos-artifact
          path: target/release/hx

  create_release:
    name: Create GitHub Release
    needs: [build_ubuntu, build_windows, build_mac]
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0  #Cargo id replace
          release_name: Release v1.0.0  
          draft: false
          prerelease: false

      - name: Attach Ubuntu Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/hx
          asset_name: hx
          asset_content_type: application/zip

      - name: Attach Windows Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/hx
          asset_name: hx.exe
          asset_content_type: application/zip
          
      - name: Attach macOS Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/hx
          asset_name: hx
          asset_content_type: application/zip



